name: CI - TMS Tests & Coverage

on:
  push:
    branches: [main]
    paths-ignore:
      - "README.md"
      - ".gitignore"
      - "LICENCE"
  pull_request:
    branches: [main]
    paths-ignore:
      - "README.md"
      - ".gitignore"
      - "LICENCE"
jobs:
  tests:
    name: Backend Tests
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_DATABASE: tms_test
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -ppassword"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    env:
      DB_CONNECTION: mysql
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_DATABASE: tms_test
      DB_USERNAME: root
      DB_PASSWORD: password
      APP_ENV: testing
      APP_KEY: base64:dummykeyforci1234567890=
      CACHE_DRIVER: array
      SESSION_DRIVER: array
      QUEUE_CONNECTION: sync

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2

        with:
          php-version: "8.1"
          extensions: mbstring, pdo, mysql, xml, ctype, json, tokenizer, bcmath, dom, fileinfo
          coverage: xdebug

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Copy .env file
        run: |
          cp .env.test .env || echo "No .env.test found, using default env"
          php artisan key:generate

      - name: Clean test database schema
        run: |
          mysql -h 127.0.0.1 -u root -ppassword -e "DROP DATABASE IF EXISTS tms_test; CREATE DATABASE tms_test;"

      - name: Run migrations
        run: php artisan migrate --force

      - name: Run tests with coverage
        run: ./vendor/bin/pest --coverage-clover=coverage.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          flags: tms-backend
          name: tms-backend-tests
          token: ${{ secrets.CODECOV_TOKEN }}
